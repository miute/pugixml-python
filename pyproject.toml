[build-system]
requires = ["scikit-build-core>=0.10"]
build-backend = "scikit_build_core.build"

[project]
name = "pugixml"
version = "0.8.0.dev1"
requires-python = ">=3.9"
description = "Light-weight, simple and fast XML parser with XPath support"
authors = [{ name = "Tetsuya Miura", email = "miute.dev@gmail.com" }]
readme = { file = "README.md", content-type = "text/markdown" }
license = "MIT"
keywords = ["dom", "xml", "xpath", "xml-parser"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: C++",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries",
  "Topic :: Text Processing :: Markup :: XML",
]
dependencies = []

[project.urls]
pugixml = "https://pugixml.org/docs/quickstart.html"
Documentation = "https://miute.github.io/pugixml-python/"
Changelog = "https://miute.github.io/pugixml-python/changelog.html"
Source = "https://github.com/miute/pugixml-python"

[dependency-groups]
dev = ["pytest>=8.3.5"]
docs = [
  "furo>=2024.8.6",
  "myst-parser>=3.0.1",
  "sphinx>=7.4.7",
  "sphinx-copybutton>=0.5.2",
]

[tool.scikit-build]
wheel.expand-macos-universal-tags = true
wheel.license-files = ["LICENSE"]
minimum-version = "build-system.requires"
sdist.exclude = ["*"]
sdist.include = [
  "/CHANGELOG*",
  "/CMakeLists.txt",
  "/LICENSE*",
  "/pyproject.toml",
  "/README*",
  "/src/pugixml/**/*.py",
  "/src/*.cpp",
  "/src/third_party/pugixml/scripts/",
  "/src/third_party/pugixml/src/",
  "/src/third_party/pugixml/CMakeLists.txt",
  "/src/third_party/pugixml/LICEN[CS]E*",
  "/src/third_party/pugixml/README*",
  "/src/third_party/pugixml/readme*",
  "/src/third_party/pybind11/include/",
  "/src/third_party/pybind11/tools/",
  "/src/third_party/pybind11/CMakeLists.txt",
  "/src/third_party/pybind11/LICEN[CS]E*",
  "/src/third_party/pybind11/README*",
]

[tool.uv]
package = false

[tool.pytest.ini_options]
addopts = ["--tb=short", "-ra", "--color=yes"]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
src = ["src", "tests"]
extend-exclude = ["src/third_party"]
line-length = 79

[tool.ruff.lint]
extend-select = [
  "A",    # flake8-builtins (A)
  "ANN",  # flake8-annotations (ANN)
  "B",    # flake8-bugbear (B)
  "C4",   # flake8-comprehensions (C4)
  "EM",   # flake8-errmsg (EM)
  "FA",   # flake8-future-annotations (FA)
  "FURB", # refurb (FURB)
  "I",    # isort (I)
  "ICN",  # flake8-import-conventions (ICN)
  "ISC",  # flake8-implicit-str-concat (ISC)
  "N",    # pep8-naming (N)
  "PIE",  # flake8-pie (PIE)
  "PL",   # Pylint (PL)
  "PT",   # flake8-pytest-style (PT)
  "Q",    # flake8-quotes (Q)
  "RET",  # flake8-return (RET)
  "RSE",  # flake8-raise (RSE)
  "RUF",  # Ruff-specific rules (RUF)
  "S",    # flake8-bandit (S)
  "SIM",  # flake8-simplify (SIM)
  "SLF",  # flake8-self (SLF)
  "T20",  # flake8-print (T20)
  "TRY",  # tryceratops (TRY)
  "UP",   # pyupgrade (UP)
  "YTT",  # flake8-2020 (YTT)
]
extend-ignore = [
  "PLR0915", # Too many statements ({statements} > {max_statements})
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
  "S101", # Use of assert detected
]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["str", "bytes", "float", "int"]

[tool.ruff.format]
line-ending = "lf"

[tool.mypy]
warn_unused_configs = true
warn_return_any = true
check_untyped_defs = true
exclude = ["^src/third_party"]
